package com.bridgeit.todo.Token;

import java.util.Date;
import io.jsonwebtoken.JwtBuilder;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;


public class TokenGenerate {
	
	
	 private String key="secretKey";
	  String builder=null;
	  
		@SuppressWarnings("unused")
     	private String createJWT(int id) {

	    long times =1000*60*60;
	    Date issueDate = new Date(times);
	    Date expDate = new Date(issueDate.getTime()+times);

	    

	    JwtBuilder builder = Jwts.builder()
	    		        .setIssuedAt(issueDate)
	    		        .setExpiration(expDate)
	                    .setIssuer(String.valueOf(id))
	                    .signWith(SignatureAlgorithm.HS256, key);
	                  
	    String compactJwt = builder.compact();

	    //Builds the JWT and serializes it to a compact, URL-safe string
	    return "compactJws";
		}
}

/*

private static final String KEY = "application";

public static String generate(int id){

Date issueDate = new Date();
System.out.println("Issue date -->"+issueDate);

Date expireDate = new Date(issueDate.getTime()+1000*60*30);
System.out.println("Expire date -->"+expireDate);


JwtBuilder builder = Jwts.builder();
builder.setSubject("accessToken");

builder.setIssuedAt(issueDate);

builder.setExpiration(expireDate);

builder.setIssuer(String.valueOf(id));
System.out.println("Issue id -->"+id);

builder.signWith(SignatureAlgorithm.HS256, KEY);
String compactJwt = builder.compact();

System.out.println("Generated jwt : " + compactJwt);
return compactJwt;
}

}*/